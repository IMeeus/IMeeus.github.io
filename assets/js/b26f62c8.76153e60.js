"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[670],{9144:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=n(4848),o=n(8453);const r={},s="Introduction",a={id:"getting-started/introduction",title:"Introduction",description:"Intro",source:"@site/docs/1.getting-started/1.introduction.md",sourceDirName:"1.getting-started",slug:"/getting-started/introduction",permalink:"/docs/getting-started/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",next:{title:"FAQ",permalink:"/docs/getting-started/faq"}},c={},l=[{value:"Intro",id:"intro",level:2},{value:"Problem",id:"problem",level:2},{value:"Overview",id:"overview",level:2}];function d(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(t.h2,{id:"intro",children:"Intro"}),"\n",(0,i.jsxs)(t.p,{children:["Hi, I'm Alex, a humble software developer that wants to share his vision of the ideal React testing strategy. I've written these docs complementary to ",(0,i.jsx)(t.a,{href:"https://testing-library.com/docs/",children:"React Testing Library"}),", so you can expect everything to be conform to their ",(0,i.jsx)(t.a,{href:"https://testing-library.com/docs/guiding-principles",children:"Guiding Principles"}),"."]}),"\n",(0,i.jsx)(t.h2,{id:"problem",children:"Problem"}),"\n",(0,i.jsxs)(t.p,{children:["Even if you follow RTL's main guideline, ",(0,i.jsx)(t.a,{href:"https://testing-library.com/docs/guiding-principles",children:'"The more your tests resemble the way your software is used, the more confidence they can give you"'}),", you can still run into a bunch of problems while writing tests. So, with my experience, I've made a very concrete approach to testing, in order to mitigate as many problems as possible."]}),"\n",(0,i.jsx)(t.p,{children:"With each proposed solution, I'll give a very clear explanation of my thought process. This way, if you don't agree with the solution, you'll at least get acquainted with the problems, so that you can adapt these guidelines to your own needs."}),"\n",(0,i.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/main-strategy/about",children:"Main testing strategy"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/guidelines/about",children:"Guidelines for problem mitigation"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);