"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[804],{4239:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=s(4848),t=s(8453);const r={sidebar_position:99},l="Brainstorm",o={id:"brainstorm",title:"Brainstorm",description:"Use of setups",source:"@site/docs/9.brainstorm.md",sourceDirName:".",slug:"/brainstorm",permalink:"/docs/brainstorm",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:99,frontMatter:{sidebar_position:99},sidebar:"tutorialSidebar",previous:{title:"E2E tests",permalink:"/docs/extra/test-categories/e2e-tests"}},h={},c=[{value:"Solution:",id:"solution",level:2},{value:"Chicago",id:"chicago",level:2},{value:"Isolated example pages?",id:"isolated-example-pages",level:2}];function a(e){const n={a:"a",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"brainstorm",children:"Brainstorm"}),"\n",(0,i.jsx)(n.p,{children:"Use of setups"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["why","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"less code / duplication per test,"}),"\n",(0,i.jsx)(n.li,{children:"bring out more intent"}),"\n",(0,i.jsx)(n.li,{children:"removes things we're not interested in."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"What to test:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["user interaction/behavior","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["why","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"gives the developer confidence that a feature works"}),"\n",(0,i.jsx)(n.li,{children:"prevents regression of behavior"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["how","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"write tests at the level where everything is in scope to test the behavior."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["tdd hooks & helpers","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["why","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"hooks & helpers should be pure functions that can be tested in isolation."}),"\n",(0,i.jsx)(n.li,{children:"it is good practice to apply wishfull thinking here."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["how","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"you all know how..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["render regression","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["why","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"if you make changes, you want to be notified whether it impacts your render"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["how","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"you don't want to have to re-test a render update in multiple components."}),"\n",(0,i.jsx)(n.li,{children:"for third-party dependency (api / local storage) write your different render paths in the file that does the call."}),"\n",(0,i.jsx)(n.li,{children:"for behavior (button click) write your test at the level where you have all render changes & the button in scope."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"What not to do:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"test propagations"}),"\n",(0,i.jsxs)(n.li,{children:["mock internal things","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"only mock external: third party / browser storage / api calls / other mfe's"}),"\n",(0,i.jsx)(n.li,{children:"don't mock hooks, components, ..."}),"\n",(0,i.jsx)(n.li,{children:"if you don't need to mock it, you don't\xa0have\xa0to..."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h1,{id:"ideas",children:"Ideas"}),"\n",(0,i.jsx)(n.p,{children:"Rename to"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Behavior tests"}),"\n",(0,i.jsxs)(n.li,{children:["Render tests","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"render permutations at the level of decision (all units in scope)"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Utility tests"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"getByRole & getByText to make behavior tests less prone to external package changes."}),"\n",(0,i.jsx)(n.p,{children:"mock external components in render tests, but not in behavior tests."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"make render tests less prone to external package changes."}),"\n",(0,i.jsx)(n.li,{children:"if you don't mock you may have problems with api calls / localstorage."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"testing component libraries (web-ui)?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"definitely render tests, because they're mocked?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"challenge render tests -> example driven development"}),"\n",(0,i.jsx)(n.p,{children:"Take inspiration for RTL's site"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fix text size."}),"\n",(0,i.jsx)(n.li,{children:"Don't use category-pages."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'Name the whole thing "testing utopia", and then make it a joke.'}),"\n",(0,i.jsx)(n.p,{children:"Always talk about previous test type in a next"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"render regression: not tested in user interaction"}),"\n",(0,i.jsx)(n.li,{children:"hooks & helpers: everything already tested, but they are usually pure functions => nice to do tdd with."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Instead of hooks & helpers -> ",(0,i.jsx)(n.strong,{children:"pure functions"}),"!"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"includes hooks, helpers, but also other things"}),"\n",(0,i.jsx)(n.li,{children:"should you test api-hooks & local storage hooks?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'Remove "where to use" from test-categories.'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"it's double info..."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You don't need a render test in each fucking file."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Can try making small AI with semantic kernel."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Mock additional method calls in methods (otherwise you're double-testing)"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Extra reason for user interaction tests:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Unit testing components, as counterpart, sucks! (extra page?)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Remove the unit test bashing from "confidence section".'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Don't even mock render regression -> Only external packages\r\nMock all external packages! Keep tests isolated!!! (Microservice architecture)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hmm, if you do this, then you can't use by role anymore D:"}),"\n",(0,i.jsx)(n.li,{children:"If your tests break, then it is what it is.. Something changed..."}),"\n",(0,i.jsx)(n.li,{children:"So don't mock external packages? Only for snaps maybe..."}),"\n",(0,i.jsxs)(n.li,{children:["And what about api calls in external packages then?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Maybe export them?"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:'As RTL sais: "Your tests should deal with DOM nodes rather than component instances".'}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Write guidelines for mocking external services."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Hidden advantage of byRole:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"tests break less easy (even with 3p changes)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h1,{id:"render-regression-brainstorm",children:"Render regression brainstorm"}),"\n",(0,i.jsx)(n.p,{children:"! Put render regression tests next to the component that causes that render."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"There should be a snapshot for each deviation in the DOM."}),"\n",(0,i.jsx)(n.li,{children:"May have overlapping snaps, but that's fine. (easy to update)"}),"\n",(0,i.jsx)(n.li,{children:"Optional: mock external package renders?"}),"\n",(0,i.jsx)(n.li,{children:"use cases: next to api-callers, behavior that changes the DOM."}),"\n",(0,i.jsx)(n.li,{children:"maybe doesn't have to simulate user behavior?"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Render regression: why?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Purely to notify devs of regression of the DOM structure."}),"\n",(0,i.jsx)(n.li,{children:"Also to see the result of when api-calls are mocked. (but doesn't example page do that already?)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Problems with snapshots:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"May cause snapshot hell when ui-lib changes."}),"\n",(0,i.jsx)(n.li,{children:"huge as fuck"}),"\n",(0,i.jsx)(n.li,{children:"devs easily update them mindlessly"}),"\n",(0,i.jsx)(n.li,{children:"not reviewed properly due to size"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://stackoverflow.com/questions/43771602/when-should-i-use-snapshot-testing",children:"https://stackoverflow.com/questions/43771602/when-should-i-use-snapshot-testing"})}),"\n",(0,i.jsx)(n.li,{children:"more granular?"}),"\n",(0,i.jsx)(n.li,{children:"mock all dependencies?"}),"\n",(0,i.jsx)(n.li,{children:"only include props in mocked renders? > not funcs, cuz they don't impact the render."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"MOCK ALL WITH SNAPSHOT TESTS!!! > Include props!"}),"\n",(0,i.jsx)(n.h2,{id:"chicago",children:"Chicago"}),"\n",(0,i.jsx)(n.p,{children:"Is chicago style TDD good for FE integration testing?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Yes because you gradually introduce more complexity and you design lower-level things first so that you can use them higher-level."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"isolated-example-pages",children:"Isolated example pages?"}),"\n",(0,i.jsx)(n.p,{children:"Would be nice if you can spin up example pages for isolated components."})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);